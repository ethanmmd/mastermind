@startuml

title __MODELS's Class Diagram__\n

  namespace ethanmmd.mastermind {
    namespace models {
      enum Color {
        BLUE
        GREEN
        ORANGE
        PURPLE
        RED
        YELLOW
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      abstract class ethanmmd.mastermind.models.Combination {
          # colors : List<Color>
          {static} - WIDTH : int
          {static} + getWidth()
          # Combination()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      enum Error {
        DUPLICATED
        WRONG_CHARACTERS
        WRONG_LENGTH
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.Game {
          {static} - MAX_LONG : int
          - attempts : int
          - proposedCombinations : List<ProposedCombination>
          - results : List<Result>
          + Game()
          + addProposedCombination()
          + clear()
          + getAttempts()
          + getProposedCombination()
          + getResult()
          + isLooser()
          + isWinner()
          ~ createGameVersion()
          ~ setGameVersion()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.Game.GameVersion {
          - attempts : int
          - proposedCombinations : List<ProposedCombination>
          - results : List<Result>
          + getAttempts()
          + getProposedCombinations()
          + getResults()
          ~ GameVersion()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.GameRegistry {
          - firstPrevious : int
          - gameVersions : List<GameVersion>
          + GameRegistry()
          ~ redo()
          ~ redoable()
          ~ registry()
          ~ reset()
          ~ undo()
          ~ undoable()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      enum GameStatus {
        EXIT
        PROPOSED
        RESUMED
        STARTED
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.ProposedCombination {
          + getColors()
          ~ contains()
          ~ contains()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.Result {
          - blacks : int
          - whites : int
          + Result()
          + getBlacks()
          + getWhites()
          ~ isWinner()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.SecretCombination {
          ~ SecretCombination()
          ~ getResult()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      interface ethanmmd.mastermind.models.Session {
          {abstract} + getGameStatus()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.SessionImplementation {
          + SessionImplementation()
          + addProposedCombination()
          + clear()
          + getAttempts()
          + getGameStatus()
          + getProposedCombination()
          + getResult()
          + isLooser()
          + isWinner()
          + next()
          + redo()
          + redoable()
          + undo()
          + undoable()
      }
    }
  }
  

  namespace ethanmmd.mastermind {
    namespace models {
      class ethanmmd.mastermind.models.Status {
          + Status()
          + getGameStatus()
          + next()
          + reset()
      }
    }
  }
  

  ethanmmd.mastermind.models.Game o-- ethanmmd.mastermind.models.SecretCombination : secretCombination
  ethanmmd.mastermind.models.Game +-down- ethanmmd.mastermind.models.Game.GameVersion
  ethanmmd.mastermind.models.GameRegistry o-- ethanmmd.mastermind.models.Game : game
  ethanmmd.mastermind.models.ProposedCombination -up-|> ethanmmd.mastermind.models.Combination
  ethanmmd.mastermind.models.SecretCombination -up-|> ethanmmd.mastermind.models.Combination
  ethanmmd.mastermind.models.SessionImplementation .up.|> ethanmmd.mastermind.models.Session
  ethanmmd.mastermind.models.SessionImplementation o-- ethanmmd.mastermind.models.Game : game
  ethanmmd.mastermind.models.SessionImplementation o-- ethanmmd.mastermind.models.GameRegistry : gameRegistry
  ethanmmd.mastermind.models.SessionImplementation o-- ethanmmd.mastermind.models.Status : status
  ethanmmd.mastermind.models.Status o-- ethanmmd.mastermind.models.GameStatus : gameStatus


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
